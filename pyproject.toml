[project]
name = "audio-aigented"
version = "0.1.0"
description = "GPU-accelerated audio transcription pipeline using NVIDIA NeMo for ASR"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core ML/Audio Processing
    "nemo-toolkit[asr]>=1.20.0",  # For ASR and speaker diarization
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "audioread>=3.0.0",  # For MP3/M4A support via librosa
    "ffmpeg-python>=0.2.0",  # For audio format conversion
    
    # Data Processing & Validation
    "pydantic>=2.0.0",
    "omegaconf>=2.3.0",
    "numpy>=1.24.0",
    
    # File Handling
    "pathlib",
    "pyyaml>=6.0",
    
    # CLI & Progress
    "click>=8.0.0",
    "tqdm>=4.64.0",
    
    # Utilities
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-material-extensions>=1.3.0",
    "pymdown-extensions>=10.5",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.8",
]

[project.scripts]
audio-transcribe = "audio_aigented.main:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src --cov-report=term-missing"
